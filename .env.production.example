# ===================================
# CONFIGURATION PRODUCTION
# Système de Gestion Hospitalière RDC
# ===================================

# IMPORTANT : Copiez ce fichier en .env et adaptez TOUTES les valeurs !
# Ne JAMAIS commit le fichier .env dans Git !

# ===================================
# DJANGO
# ===================================

# Clé secrète Django (OBLIGATOIRE - Générez une nouvelle clé unique !)
# Pour générer : python -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())'
SECRET_KEY=CHANGEZ-CETTE-CLE-SECRETE-POUR-LA-PRODUCTION-TRES-LONGUE-ET-COMPLEXE

# Mode Debug (TOUJOURS False en production)
DEBUG=False

# Hôtes autorisés (domaines de votre site, séparés par des virgules)
# Exemple : votresite.com,www.votresite.com,api.votresite.com
ALLOWED_HOSTS=votredomaine.com,www.votredomaine.com

# CORS Origins autorisés (si vous avez une API frontend séparée)
CORS_ALLOWED_ORIGINS=https://votredomaine.com,https://www.votredomaine.com

# ===================================
# BASE DE DONNÉES (Prisma Postgres ou autre)
# ===================================

# URL complète de connexion PostgreSQL
# Format : postgresql://utilisateur:motdepasse@hote:port/nom_base
# 
# Exemples :
# - Prisma Postgres : postgresql://user:password@aws-0-eu-central-1.pooler.supabase.com:5432/postgres
# - Neon : postgresql://user:password@ep-xyz.eu-central-1.aws.neon.tech/neondb
# - Supabase : postgresql://postgres:password@db.xyz.supabase.co:5432/postgres
# - Railway : postgresql://postgres:password@containers-us-west-xyz.railway.app:5432/railway
DATABASE_URL=postgresql://username:password@host:port/database_name

# ===================================
# REDIS (Cache - Optionnel mais recommandé)
# ===================================

# URL Redis pour le cache
# Format : redis://:motdepasse@hote:port/db
# 
# Exemples :
# - Redis Cloud : redis://:password@redis-xyz.cloud.redislabs.com:12345/0
# - Upstash : redis://:password@global-xyz.upstash.io:6379/0
# - Local : redis://localhost:6379/0
REDIS_URL=redis://:votre_password@votre_host:6379/0

# ===================================
# EMAIL (Optionnel)
# ===================================

# Configuration SMTP pour l'envoi d'emails
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_USE_TLS=True
EMAIL_HOST_USER=votre_email@gmail.com
EMAIL_HOST_PASSWORD=votre_mot_de_passe_app
DEFAULT_FROM_EMAIL=noreply@votredomaine.com

# ===================================
# STOCKAGE FICHIERS (Optionnel)
# ===================================

# AWS S3 pour stocker les fichiers media en production
# AWS_ACCESS_KEY_ID=votre_access_key
# AWS_SECRET_ACCESS_KEY=votre_secret_key
# AWS_STORAGE_BUCKET_NAME=votre-bucket-hospital
# AWS_S3_REGION_NAME=eu-central-1

# ===================================
# SÉCURITÉ
# ===================================

# HTTPS en production (recommandé)
SECURE_SSL_REDIRECT=True
SESSION_COOKIE_SECURE=True
CSRF_COOKIE_SECURE=True

# HSTS (HTTP Strict Transport Security)
SECURE_HSTS_SECONDS=31536000
SECURE_HSTS_INCLUDE_SUBDOMAINS=True
SECURE_HSTS_PRELOAD=True

# ===================================
# DOCKER
# ===================================

# Port pour l'application web
PORT=8000

# Ports Nginx
NGINX_HTTP_PORT=80
NGINX_HTTPS_PORT=443

# ===================================
# MONITORING (Optionnel)
# ===================================

# Sentry pour le tracking d'erreurs
# SENTRY_DSN=https://xxxxx@sentry.io/xxxxx

# ===================================
# NOTES IMPORTANTES
# ===================================

# 1. Pour Prisma Postgres :
#    - Créez un projet sur https://prisma.io/
#    - Obtenez l'URL de connexion dans les paramètres
#    - Format : postgresql://user:password@host:port/dbname?sslmode=require
#
# 2. Pour générer SECRET_KEY :
#    python -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())'
#
# 3. Permissions fichier .env :
#    chmod 600 .env (Linux/Mac)
#
# 4. Ne JAMAIS partager votre fichier .env !
#    Il est déjà dans .gitignore