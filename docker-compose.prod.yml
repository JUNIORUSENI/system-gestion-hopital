# Docker Compose pour PRODUCTION avec base de données externe (Prisma Postgres ou autre)
version: '3.8'

services:
  # Application web Django (Production)
  web:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: hospital_web_prod
    command: >
      sh -c "
        echo 'Attente de la base de données...' &&
        python manage.py migrate --noinput &&
        python manage.py collectstatic --noinput &&
        echo 'Démarrage de Gunicorn...' &&
        gunicorn --bind 0.0.0.0:8000 
                 --workers 4 
                 --threads 2
                 --timeout 120 
                 --max-requests 1000 
                 --max-requests-jitter 100 
                 --access-logfile - 
                 --error-logfile - 
                 --log-level info
                 hospital_project.wsgi:application
      "
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
      - logs_volume:/app/logs
    ports:
      - "${PORT:-8000}:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=hospital_project.settings.production
      - DEBUG=False
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_URL=${DATABASE_URL}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-*}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-}
      - REDIS_URL=${REDIS_URL:-}
    restart: unless-stopped

  # Serveur Nginx (Reverse Proxy et fichiers statiques)
  nginx:
    image: nginx:alpine
    container_name: hospital_nginx_prod
    ports:
      - "${NGINX_HTTP_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    volumes:
      - ./docker/nginx/prod.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/app/static:ro
      - media_volume:/app/media:ro
      - ./docker/ssl:/etc/nginx/ssl:ro
    depends_on:
      - web
    restart: unless-stopped

volumes:
  static_volume:
    driver: local
  media_volume:
    driver: local
  logs_volume:
    driver: local

networks:
  default:
    name: hospital_network_prod